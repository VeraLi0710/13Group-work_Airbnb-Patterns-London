---
title: 'Q7: Identifying Factors Associated with the Violations of the 90-Day Policy'
jupyter:
  jupytext:
    text_representation:
      extension: .qmd
      format_name: quarto
      format_version: '1.0'
      jupytext_version: 1.16.4
  kernelspec:
    display_name: Python (base)
    language: python
    name: base
---

```{python}
#| echo: false

# packages
import pandas as pd  
import numpy as np  
from scipy.stats import pearsonr, pointbiserialr, chi2_contingency  
import matplotlib.pyplot as plt  
from matplotlib.font_manager import FontProperties  
import seaborn as sns 
import geopandas as gpd
from shapely.geometry import Point
```

## load data

```{python}
#| echo: false
# load data   

listing = pd.read_csv('data/processed_airbnb_data.csv')  # inside airbnb with estimated nights

ward = (
    gpd.read_file('data/statistical-gis-boundaries-london/ESRI/London_Ward_CityMerged.shp') # london ward
    .to_crs(epsg=27700)  
)

nature = (
    gpd.read_file('data/ldn_poi/gis_osm_natural_free_1.shp') # nature poi
    .to_crs(epsg=27700)  
)

transport = (
    gpd.read_file('data/ldn_poi/gis_osm_transport_free_1.shp') # transport poi
    .to_crs(epsg=27700)  
) 

tourism = (
    gpd.read_file('data/ldn_poi/gis_osm_pois_free_1.shp') # tourism poi
    .to_crs(epsg=27700)  
) 
```

```{python}
#| echo: false

# check data info  
print(listing.info()) 
```

```{python}
#| echo: false

# check data info  
print(ward.info()) 
```

```{python}
#| echo: false

# check data info  
print(nature.info()) 
```

```{python}
#| echo: false

# check data info  
print(transport.info()) 
```

```{python}
#| echo: false

# check data info  
print(tourism.info()) 
```

## manipulate data

```{python}
#| echo: false

# convert listing data from csv to spatial data
# create geometry
geometry = [Point(xy) for xy in zip(listing['longitude'], listing['latitude'])]

# GeoDataFrame
listing_spatial = gpd.GeoDataFrame(listing, geometry=geometry, crs='EPSG:4326')

# convert CRS
listing_spatial = listing_spatial.to_crs(epsg=27700)

# info check
print(listing_spatial.head())
```

```{python}
#| echo: false
# Y: density of over-90-days listings per ward

# keep listings > 90 only
listing_spatial_90 = listing_spatial[listing_spatial['estimated_nights_booked'] >= 90]
print(listing_spatial_90)
```

```{python}
# number per ward
join_listing_ward = gpd.sjoin(ward, listing_spatial_90, how='left', predicate='intersects')
ward_count = join_listing_ward.groupby('GSS_CODE').size().reset_index(name='listing_count')
ward = ward.merge(ward_count, on='GSS_CODE', how='left')
ward['listing_count'] = ward['listing_count'].fillna(0)

# ward area
ward['area'] = ward.geometry.area

# density
ward['listing_density'] = ward['listing_count'] / ward['area']

# 可视化结果
fig, ax = plt.subplots(1, 1, figsize=(10, 8))
ward.plot(column='listing_density', cmap='viridis', legend=True, ax=ax)
ax.set_title("Density of Over-90-days Listings by Ward")
plt.axis('off')
plt.show()
```

```{python}
#| echo: false
# X1: density of green spaces per ward

# number per ward
join_nature_ward = gpd.sjoin(ward, nature, how='left', predicate='intersects')
ward_count = join_nature_ward.groupby('GSS_CODE').size().reset_index(name='nature_count')
ward = ward.merge(ward_count, on='GSS_CODE', how='left')
ward['nature_count'] = ward['nature_count'].fillna(0)

# density
ward['nature_density'] = ward['nature_count'] / ward['area']

# 可视化结果
fig, ax = plt.subplots(1, 1, figsize=(10, 8))
ward.plot(column='nature_density', cmap='viridis', legend=True, ax=ax)
ax.set_title("Density of Green Spaces by Ward")
plt.axis('off')
plt.show()
```

```{python}
#| echo: false
# X2: density of Transport Networks per ward

# number per ward
join_transport_ward = gpd.sjoin(ward, transport, how='left', predicate='intersects')
ward_count = join_transport_ward.groupby('GSS_CODE').size().reset_index(name='transport_count')
ward = ward.merge(ward_count, on='GSS_CODE', how='left')
ward['transport_count'] = ward['transport_count'].fillna(0)

# density
ward['transport_density'] = ward['transport_count'] / ward['area']

# 可视化结果
fig, ax = plt.subplots(1, 1, figsize=(10, 8))
ward.plot(column='transport_density', cmap='viridis', legend=True, ax=ax)
ax.set_title("Density of Transport Networks by Ward")
plt.axis('off')
plt.show()
```

```{python}
#| echo: false
# X3: density of Tourism Attractions per ward

# 提取 code 列中以 '26' 开头的行
tourism = tourism[tourism['code'].astype(str).str.startswith('26')]

# 显示结果
print(tourism)
```

```{python}
# number per ward
join_tourism_ward = gpd.sjoin(ward, tourism, how='left', predicate='intersects')
ward_count = join_tourism_ward.groupby('GSS_CODE').size().reset_index(name='tourism_count')
ward = ward.merge(ward_count, on='GSS_CODE', how='left')
ward['tourism_count'] = ward['tourism_count'].fillna(0)

# density
ward['tourism_density'] = ward['tourism_count'] / ward['area']

# 可视化结果
fig, ax = plt.subplots(1, 1, figsize=(10, 8))
ward.plot(column='tourism_density', cmap='viridis', legend=True, ax=ax)
ax.set_title("Density of Tourism Attractions by Ward")
plt.axis('off')
plt.show()
```

```{python}
#| echo: false

# check data info  
print(ward.info()) 
```

